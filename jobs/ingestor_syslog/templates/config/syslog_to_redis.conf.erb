input {
	<% if p("logstash_ingestor.syslog.port") %>
	tcp {
		add_field => [ "type", "syslog" ]
		host => "0.0.0.0"
		port => "<%= p("logstash_ingestor.syslog.port") %>"
	}
	udp {
		add_field => [ "type", "syslog" ]
		host => "0.0.0.0"
		port => "<%= p("logstash_ingestor.syslog.port") %>"
	}
	<% end %>

	<% if_p("logstash_ingestor.syslog_tls.port") do | port | %>
    tcp {
		add_field => [ "type", "syslog" ]
		host => "0.0.0.0"
		port => "<%= port %>"
		ssl_enable => true
		ssl_cert => "/var/vcap/jobs/ingestor_syslog/config/syslog_tls.crt"
		ssl_key => "/var/vcap/jobs/ingestor_syslog/config/syslog_tls.key"
	}
	<% end %>
}

filter {
    mutate {
        rename => [ "host", "@ingestor.remote_host" ]
        rename => [ "sslsubject", "@ingestor.sslsubject" ]
    }
}

output {
	<% if p("logstash_ingestor.debug") %>
        stdout {
            codec => "json"
        }
	<% end %>
	
	<% if_p('kafka.broker') do %>
		kafka {
			broker_list => '<%= p('kafka.broker').join(',') %>'
			topic_id => '<%= p('kafka.topic') %>'
			client_id => 'ingestor_syslog.<%= name %>.<%= index %>'
		}
	<% end %>

	<% if_p('redis.host') do %>
		redis {
			host => "<%= p("redis.host") %>"
			port => "<%= p("redis.port") %>"
			data_type => "list"
			key => "<%= p("redis.key") %>"
			batch => true
			batch_events => 50
		}
	<% end %>

	<% if_p('dev.syslog_mirror.host') do %>
		syslog {
		    host => '<%= p('dev.syslog_mirror.host') %>'
		    port => <%= p('dev.syslog_mirror.port') %>
		    facility => 'user-level'
		    severity => 'notice'
		}
	<% end %>
}
