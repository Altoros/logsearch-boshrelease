input {
	lumberjack {
		add_field => [ "_logstash_input", "lumberjack" ]
		host => "0.0.0.0"
		port => "<%= p("logstash_ingestor.lumberjack.port") %>"
		ssl_certificate => "/var/vcap/jobs/ingestor_lumberjack/config/lumberjack.crt"
		ssl_key => "/var/vcap/jobs/ingestor_lumberjack/config/lumberjack.key"
	}
}

filter {
	if [_logstash_input] == "lumberjack" {
		mutate {
			add_field => [ "@source.host", "%{host}" ]
			add_field => [ "@source.path", "%{file}" ]
			add_field => [ "@source.offset", "%{offset}" ]
			remove_field => [ "host", "file", "offset", "_logstash_input" ]
		}
	}
}
				
output {
	<% if p("logstash_ingestor.debug") %>
        stdout {
            codec => "json"
        }
	<% end %>

	<% if_p('kafka.broker') do %>
		kafka {
			broker_list => '<%= p('kafka.broker').join(',') %>'
			topic_id => '<%= p('kafka.topic') %>'
			client_id => 'ingestor_lumberjack.<%= name %>.<%= index %>'
		}
	<% end %>

	<% if_p('redis.host') do %>
		redis {
			host => "<%= p("redis.host") %>"
			port => "<%= p("redis.port") %>"
			data_type => "list"
			key => "<%= p("redis.key") %>"
			batch => true
			batch_events => 50
		}
	<% end %>

	<% if_p('dev.syslog_mirror.host') do %>
		syslog {
		    host => '<%= p('dev.syslog_mirror.host') %>'
		    port => <%= p('dev.syslog_mirror.port') %>
		    facility => 'user-level'
		    severity => 'notice'
		}
	<% end %>
}
